/*
** EPITECH PROJECT, 2023
** PAGYOZ' Clib. Check it out at : https://github.com/PAGY0Z/my_lib_c
** File description:
** types_header
*/

////////////////////////////////////////////////////////////////////////////////
/// \file types_header.h
/// \brief Contains all they types of the library.
/// \authors PAGY0Z
/// \version 0.1
/// \date 2023-23-04
////////////////////////////////////////////////////////////////////////////////

#ifndef TYPES_HEADER_H_
    #define TYPES_HEADER_H_

    #include <stdbool.h>

    ////////////////////////////////////////////////////////////////////////////
    /// \addtogroup LIBRARY
    /// \brief Contains all the files of the library.
    /// @{
    ////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////
    /// \addtogroup LIBRARY_TYPESDEFS
    /// \brief Contains all the typedef of the library.
    /// @{
    ////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////
    /// \typedef
    /// \brief Unsigned char.
    ////////////////////////////////////////////////////////////////////////////
    typedef unsigned char uchar_t;

    ////////////////////////////////////////////////////////////////////////////
    /// \typedef
    /// \brief Unsigned char.
    ////////////////////////////////////////////////////////////////////////////
    typedef char byte_t;

    ////////////////////////////////////////////////////////////////////////////
    /// \typedef
    /// \brief success status.
    /// \enum success_e
    ////////////////////////////////////////////////////////////////////////////
    typedef enum success_e {
        NONE = 0,
        SUCCESS = 1,
        FAILURE = 84,
    } success_t;

    ////////////////////////////////////////////////////////////////////////////
    /// \typedef
    /// \brief return exit status.
    /// \enum return_e
    ////////////////////////////////////////////////////////////////////////////
    typedef enum return_e {
        SUC_OUT = 0,
        ERR_OUT = 84,
    } return_t;

    ////////////////////////////////////////////////////////////////////////////
    /// @}
    ////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////
    /// \addtogroup LIBRARY_CONSTANTS
    /// \brief Contains all the constants of the library.
    /// @{
    ////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////
    /// \def
    /// \brief Constant for the malloc function.
    ////////////////////////////////////////////////////////////////////////////
    #define MALL_VS ((int[]){1, 1, 1, 1, 1, 1, 1, 1, 1, 1})

    ////////////////////////////////////////////////////////////////////////////
    /// \brief Constant for a default array.
    ////////////////////////////////////////////////////////////////////////////
    static char * const default_array[] = {
        NULL,
    };

    ////////////////////////////////////////////////////////////////////////////
    /// \def
    /// \brief Constant for the default array.
    ////////////////////////////////////////////////////////////////////////////
    #define DEFAULT_ARRAY ((char **)default_array)

    ////////////////////////////////////////////////////////////////////////////
    /// \def
    /// \brief Constant for the default help flag.
    ////////////////////////////////////////////////////////////////////////////
    #define HELP_FLAG0 "-h"

    ////////////////////////////////////////////////////////////////////////////
    /// \def
    /// \brief Constant for the default help flag.
    ////////////////////////////////////////////////////////////////////////////
    #define HELP_FLAG1 "--help"

    ////////////////////////////////////////////////////////////////////////////
    /// \def
    /// \brief Constant for the BASE_BIN.
    ////////////////////////////////////////////////////////////////////////////
    #define BASE_BIN "01"

    ////////////////////////////////////////////////////////////////////////////
    /// \def
    /// \brief Constant for the BASE_OCT.
    ////////////////////////////////////////////////////////////////////////////
    #define BASE_OCT "01234567"

    ////////////////////////////////////////////////////////////////////////////
    /// \def
    /// \brief Constant for the BASE_DEC.
    ////////////////////////////////////////////////////////////////////////////
    #define BASE_DEC "0123456789"

    ////////////////////////////////////////////////////////////////////////////
    /// \def
    /// \brief Constant for the BASE_HEX_UP
    ////////////////////////////////////////////////////////////////////////////
    #define BASE_HEX_UP "0123456789ABCDEF"

    ////////////////////////////////////////////////////////////////////////////
    /// \def
    /// \brief Constant for the BASE_HEX_LOW
    ////////////////////////////////////////////////////////////////////////////
    #define BASE_HEX_LOW "0123456789abcdef"

    ////////////////////////////////////////////////////////////////////////////
    /// @}
    ////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////
    /// @}
    ////////////////////////////////////////////////////////////////////////////

#endif /* !TYPES_HEADER_H_ */
